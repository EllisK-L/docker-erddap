name: Push

on: [push, workflow_dispatch, pull_request]
env:
  BUILDX_CACHE: /tmp/.buildx-cache
  CACHE_KEY: docker-erddap-buildx-

jobs:
  build:
    name: Build and test Docker Image
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    strategy:
      matrix:
        include:
          - base: "unidata/tomcat-docker:8.5@sha256:0d65eef935da7bc00242360269070261fb6e6428cb906aa4ce7509301a2216f9"
            tag: "jdk8-openjdk"
          - base: "unidata/tomcat-docker:8.5-jdk11-openjdk@sha256:1100d1ba623d66313e43acf921879dd7df1fc7aadb19bc1b273af4e4ab31a032"
            tag: "jdk11-openjdk"

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          axiom/docker-erddap
        tags: |
          type=raw,value=latest,enable=${{ matrix.tag == 'jdk8-openjdk' }}
          type=raw,value=${{ matrix.tag }},prefix=latest-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ${ BUILDX_CACHE }
        key: ${ CACHE_KEY }${{ github.sha }}
        restore-keys: |
          ${ CACHE_KEY }

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      continue-on-error: true
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BASE_IMAGE=${{ matrix.base }}
        cache-from: type=local,src=${ BUILDX_CACHE }
        cache-to: type=local,dest=${ BUILDX_CACHE }
        outputs: type=docker

    - name: Run Docker Image in Background
      run: docker run -d -p 8080:8080 ${{ fromJSON(steps.meta.outputs.json).tags[0] }}

    - name: Check that ERDDAP Docker Image will return a 200
      uses: ifaxity/wait-on-action@v1
      timeout-minutes: 1
      with:
        resource: http://localhost:8080/erddap/index.html

  push:
    name: Push latest image to Docker Hub
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: build
    if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.repository == 'axiom-data-science/docker-erddap'

    strategy:
      matrix:
        include:
          - base: "unidata/tomcat-docker:8.5@sha256:0d65eef935da7bc00242360269070261fb6e6428cb906aa4ce7509301a2216f9"
            tag: "jdk8-openjdk"
          - base: "unidata/tomcat-docker:8.5-jdk11-openjdk@sha256:1100d1ba623d66313e43acf921879dd7df1fc7aadb19bc1b273af4e4ab31a032"
            tag: "jdk11-openjdk"

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          axiom/docker-erddap
        tags: |
          type=raw,value=latest,enable=${{ matrix.tag == 'jdk8-openjdk' }}
          type=raw,value=${{ matrix.tag }},prefix=latest-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ${ BUILDX_CACHE }
        key: ${ CACHE_KEY }${{ github.sha }}
        restore-keys: |
          ${ CACHE_KEY }

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push latest image to Docker Hub if on master or main branch of Axiom's repo
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BASE_IMAGE=${{ matrix.base }}
        cache-from: type=local,src=${ BUILDX_CACHE }
        cache-to: type=local,dest=${ BUILDX_CACHE }
